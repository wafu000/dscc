// ChatServer.java
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.net.ServerSocket;
import java.net.Socket;

public class ChatServer {
	int port;
    ServerSocket serverSocket;
    Socket socket;
    
	public ChatServer(int port) {
		super();
		this.port = port;
	}

	public void listen() {
        try {
            serverSocket = new ServerSocket(port);            
            System.out.println("Listening on ip:" + serverSocket.getInetAddress().getHostAddress() + " and port:" + port);
            
            socket = serverSocket.accept();
            System.out.println("Client Accepted " + socket);
            
            DataInputStream dis = new DataInputStream(new BufferedInputStream(socket.getInputStream()));
            boolean done = false;
            
            while (!done) {
            	String line = dis.readUTF();
     		   	System.out.println("Client Msg - "+ line + "\n");
     		   	done = line.equals("bye");
            }
            dis.close();
            socket.close();
        } catch (Exception e) {
        	System.out.println(e.getMessage());
        }
    }
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ChatServer cs = new ChatServer(5000);
		cs.listen();
	}
}

//ChatClient.java
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.net.InetAddress;
import java.net.Socket;

public class ChatClient {
	Socket socket;
	int port;
	
	public ChatClient(int port) {
		super();
		this.port = port;
	}
	
	public void request() {
		try {
			InetAddress host = InetAddress.getLocalHost();
			socket = new Socket(host.getHostName(), port);
			
			DataOutputStream dos = new DataOutputStream(socket.getOutputStream());
			System.out.println("Connected");
			
			BufferedReader keyRead = new BufferedReader(new InputStreamReader(System.in));
			String line = "";
			
			while(!line.equals("bye")) {
				line = keyRead.readLine();
		        dos.writeUTF(line);
		        dos.flush();
		      }
			keyRead.close();
			dos.close();
			socket.close();
		}
		catch(Exception e) {
        	System.out.println(e.getMessage());
		}		
	}
	
	public static void main(String[] ar) {
		ChatClient cc = new ChatClient(5000);
		cc.request();
    }
}




//ChatClient2Way

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.net.InetAddress;
import java.net.Socket;

public class ChatClient2Way {
	Socket socket;
	int port;
	
	public ChatClient2Way(int port) {
		super();
		this.port = port;
	}
	
	public void request() {
		try {
			InetAddress host = InetAddress.getLocalHost();
			socket = new Socket(host.getHostName(), port);
			
			DataOutputStream dos = new DataOutputStream(socket.getOutputStream());
			DataInputStream dis = new DataInputStream(socket.getInputStream());
			System.out.println("Connected");
			
			BufferedReader keyRead = new BufferedReader(new InputStreamReader(System.in));
			String line = "";
			
			while(!line.equals("bye")) {
				line = keyRead.readLine();
		        dos.writeUTF(line);
		        dos.flush();
		        
		        line = dis.readUTF();
		        System.out.println("Server reply - " + line);
		      }
			keyRead.close();
			dos.close();
			socket.close();
		}
		catch(Exception e) {
        	System.out.println(e.getMessage());
		}		
	}
	
	public static void main(String[] ar) {
		ChatClient2Way cc = new ChatClient2Way(5000);
		cc.request();
    }
}



//ChatServer2way

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;

public class ChattServer2Way {
	int port;
    ServerSocket serverSocket;
    Socket socket;
    
    public ChattServer2Way(int port) {
		super();
		this.port = port;
	}

	public void listen() {
        try {
            serverSocket = new ServerSocket(port);            
            System.out.println("Listening on ip:" + serverSocket.getInetAddress().getHostAddress() + " and port:" + port);
            
            socket = serverSocket.accept();
            System.out.println("Client Accepted " + socket);
            
            DataInputStream dis = new DataInputStream(new BufferedInputStream(socket.getInputStream()));
            DataOutputStream dos = new DataOutputStream(new BufferedOutputStream(socket.getOutputStream()));
            
            BufferedReader keyRead = new BufferedReader(new InputStreamReader(System.in));
            boolean done = false;
            
            while (!done) {
            	String line = dis.readUTF();
     		   	System.out.println("Client Msg - "+ line + "\n");
     		   	done = line.equals("bye");
     		   	line = keyRead.readLine();
     		   	dos.writeUTF(line);
     		   	dos.flush();
            }
            dis.close();
            socket.close();
        } catch (Exception e) {
        	System.out.println(e.getMessage());
        }
    }
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ChattServer2Way cs = new ChattServer2Way(5000);
		cs.listen();
	}
}